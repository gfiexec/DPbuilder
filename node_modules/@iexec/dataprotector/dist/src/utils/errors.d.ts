import { ValidationError } from 'yup';
export declare const grantAccessErrorMessage = "Failed to grant access";
export declare const consumeProtectedDataErrorMessage = "Failed to consume protected data";
export declare const processProtectedDataErrorMessage = "Failed to process protected data";
export declare class WorkflowError extends Error {
    isProtocolError: boolean;
    constructor({ message, errorCause, isProtocolError, }: {
        message: string;
        errorCause: Error;
        isProtocolError?: boolean;
    });
}
export declare function handleIfProtocolError(error: Error): void;
export declare class ErrorWithData extends Error {
    data: Record<string, any>;
    originalError?: Error;
    constructor(message: string, data: Record<string, any>, originalError?: Error);
}
export { ValidationError };
